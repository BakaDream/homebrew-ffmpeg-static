name: FF FFmpeg Static Build (macOS Apple Silicon)

# 触发条件：手动触发 + 推送到main分支时触发
on:
  workflow_dispatch:  # 手动触发
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14  # 使用最新macOS runner（支持Apple Silicon）
    steps:
      - name: 检查源码
        uses: actions/checkout@v4

      - name: 安装Homebrew并更新
        run: |
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          brew update && brew upgrade

      - name: 安装静态编译依赖（必需+可选）
        run: |
          # 安装依赖时优先启用静态库
          brew install aom dav1d fontconfig freetype frei0r harfbuzz lame libass libvorbis libvpx libx11 libxcb opus sdl2 snappy theora x264 x265 xz libarchive libogg libsamplerate
          brew install aribb24 chromaprint fdk-aac game-music-emu jack jpeg-xl libaribcaption libbluray libbs2b libcaca libdvdnav libdvdread libgsm libmodplug libopenmpt libplacebo librist librsvg libsoxr libssh libtensorflow libvidstab libvmaf libxml2 openal-soft opencore-amr openh264 openjpeg openssl openvino rav1e rtmpdump rubberband speex srt svt-av1 tesseract two-lame webp xvid zeromq zimg
          # 安装编译工具
          brew install pkgconf nasm make gcc

      - name: 下载FFmpeg源码并应用补丁
        run: |
          mkdir -p ~/ffmpeg-build && cd ~/ffmpeg-build
          
          # 下载FFmpeg源码
          echo "Downloading FFmpeg source..."
          curl -fL https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.xz -o ffmpeg-7.1.1.tar.xz || { echo "Failed to download FFmpeg"; exit 1; }
          tar -xf ffmpeg-7.1.1.tar.xz && cd ffmpeg-7.1.1
          
          # 应用SVT-AV1补丁
          echo "Downloading and applying SVT-AV1 patch..."
          curl -fL https://github.com/FFmpeg/FFmpeg/commit/d1ed5c06e3edc5f2b5f3664c80121fa55b0baa95.patch?full_index=1 -o svt-av1.patch || { echo "Failed to download SVT-AV1 patch"; exit 1; }
          if [ -f "svt-av1.patch" ]; then
            patch -p1 < svt-av1.patch || { echo "Failed to apply SVT-AV1 patch"; exit 1; }
          else
            echo "SVT-AV1 patch file not found"; exit 1;
          fi
          
          # 应用qtwebengine补丁
          echo "Downloading and applying qtwebengine patch..."
          curl -fL https://gitlab.archlinux.org/archlinux/packaging/packages/ffmpeg/-/raw/5670ccd86d3b816f49ebc18cab878125eca2f81f/add-av_stream_get_first_dts-for-chromium.patch -o qtwebengine.patch || { echo "Failed to download qtwebengine patch"; exit 1; }
          if [ -f "qtwebengine.patch" ]; then
            patch -p1 < qtwebengine.patch || { echo "Failed to apply qtwebengine patch"; exit 1; }
          else
            echo "qtwebengine patch file not found"; exit 1;
          fi

      - name: 静态编译配置（含openal-soft路径设置）
        run: |
          cd ~/ffmpeg-build/ffmpeg-7.1.1
          
          # 关键：设置openal-soft的环境变量（解决keg-only问题）
          export PATH="/opt/homebrew/opt/openal-soft/bin:$PATH"
          export LDFLAGS="-L/opt/homebrew/opt/openal-soft/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/openal-soft/include"
          export PKG_CONFIG_PATH="/opt/homebrew/opt/openal-soft/lib/pkgconfig:$PKG_CONFIG_PATH"
          
          # 静态编译核心参数
          ./configure \
            --prefix=/usr/local/ffmpeg-static \
            --enable-static \
            --disable-shared \
            --cc=gcc \
            --host-cflags="-arch arm64 -I/usr/local/include -I$(brew --prefix)/include" \
            --host-ldflags="-arch arm64 -L/usr/local/lib -L$(brew --prefix)/lib" \
            --enable-gpl \
            --enable-nonfree \
            --enable-neon \
            --enable-opencl \
            --enable-audiotoolbox \
            --enable-videotoolbox \
            --enable-openal \
            --enable-libaom \
            --enable-libdav1d \
            --enable-libharfbuzz \
            --enable-libmp3lame \
            --enable-libopus \
            --enable-libsnappy \
            --enable-libtheora \
            --enable-libvorbis \
            --enable-libvpx \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libfontconfig \
            --enable-libfreetype \
            --enable-frei0r \
            --enable-libass \
            --enable-demuxer=dash \
            --enable-chromaprint \
            --enable-libaribb24 \
            --enable-libaribcaption \
            --enable-libbluray \
            --enable-libbs2b \
            --enable-libcaca \
            --enable-libfdk-aac \
            --enable-libgme \
            --enable-libgsm \
            --enable-libjxl \
            --enable-libmodplug \
            --enable-libopenh264 \
            --enable-libopenjpeg \
            --enable-libopenmpt \
            --enable-libplacebo \
            --enable-librist \
            --enable-librsvg \
            --enable-librtmp \
            --enable-librubberband \
            --enable-libsoxr \
            --enable-libspeex \
            --enable-libsrt \
            --enable-libssh \
            --enable-libtensorflow \
            --enable-libtesseract \
            --enable-libtwolame \
            --enable-libvidstab \
            --enable-libvmaf \
            --enable-libwebp \
            --enable-libxml2 \
            --enable-libxvid \
            --enable-libzimg \
            --enable-libzmq \
            --enable-openssl \
            --enable-libopenvino \
            --enable-librav1e \
            --enable-libsvtav1 \
            --disable-htmlpages \
            --enable-version3

      - name: 编译FFmpeg
        run: |
          cd ~/ffmpeg-build/ffmpeg-7.1.1
          make -j$(sysctl -n hw.ncpu)  # 利用所有CPU核心加速编译

      - name: 安装并打包产物
        run: |
          cd ~/ffmpeg-build/ffmpeg-7.1.1
          make install  # 安装到--prefix指定路径
          # 打包静态编译产物（包含ffmpeg、ffprobe等）
          cd /usr/local/ffmpeg-static
          tar -czf ffmpeg-static-macos-arm64.tar.gz *

      - name: 上传到Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-static-macos-arm64
          path: /usr/local/ffmpeg-static/ffmpeg-static-macos-arm64.tar.gz
          retention-days: 30  # 产物保留30天
