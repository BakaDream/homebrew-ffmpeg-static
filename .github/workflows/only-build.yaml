name: Build FFmpeg macOS ARM64 Full

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up directories
        run: |
          mkdir -p $GITHUB_WORKSPACE/build
          mkdir -p $GITHUB_WORKSPACE/output

      - name: Install basic tools
        run: brew install cmake nasm yasm pkg-config wget

      # ------------------------
      # libiconv
      # ------------------------
      - name: Build libiconv
        run: |
          cd $GITHUB_WORKSPACE/build
          curl -LO https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.16.tar.gz
          tar xf libiconv-1.16.tar.gz
          cd libiconv-1.16
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # expat
      # ------------------------
      - name: Build expat
        run: |
          cd $GITHUB_WORKSPACE/build
          curl -L -o expat-2.2.10.tar.gz https://github.com/libexpat/libexpat/releases/download/R_2_2_10/expat-2.2.10.tar.gz
          tar xf expat-2.2.10.tar.gz
          cd expat-2.2.10
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # fribidi
      # ------------------------
      - name: Build fribidi
        run: |
          cd $GITHUB_WORKSPACE/build
          FRIBIDI_VER="1.0.12"
          curl -L -o fribidi-$FRIBIDI_VER.tar.xz https://github.com/fribidi/fribidi/releases/download/$FRIBIDI_VER/fribidi-$FRIBIDI_VER.tar.xz
          tar xf fribidi-$FRIBIDI_VER.tar.xz
          cd fribidi-$FRIBIDI_VER
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # enca
      # ------------------------
      - name: Build enca
        run: |
          cd $GITHUB_WORKSPACE/build
          curl -L -o enca-1.19.tar.gz https://dl.cihar.com/enca/enca-1.19.tar.gz
          tar xf enca-1.19.tar.gz
          cd enca-1.19
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # x264
      # ------------------------
      - name: Build x264
        run: |
          cd $GITHUB_WORKSPACE/build
          git clone https://code.videolan.org/videolan/x264.git
          cd x264
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --enable-pic
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # x265
      # ------------------------
      - name: Build x265
        run: |
          cd $GITHUB_WORKSPACE/build
          git clone https://bitbucket.org/multicoreware/x265_git
          cd x265_git/build
          cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/build -DENABLE_SHARED=OFF ../source
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # LAME
      # ------------------------
      - name: Build LAME
        run: |
          cd $GITHUB_WORKSPACE/build
          git clone https://github.com/rbrito/lame.git
          cd lame
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-nasm --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # freetype
      # ------------------------
      - name: Build freetype
        run: |
          cd $GITHUB_WORKSPACE/build
          curl -LO https://download.savannah.gnu.org/releases/freetype/freetype-2.13.0.tar.gz
          tar xf freetype-2.13.0.tar.gz
          cd freetype-2.13.0
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # fontconfig
      # ------------------------
      - name: Build fontconfig
        run: |
          cd $GITHUB_WORKSPACE/build
          curl -LO https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.14.2.tar.gz
          tar xf fontconfig-2.14.2.tar.gz
          cd fontconfig-2.14.2
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared --with-freetype-config=$GITHUB_WORKSPACE/build/bin/freetype-config
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # libass
      # ------------------------
      - name: Build libass
        run: |
          cd $GITHUB_WORKSPACE/build
          curl -L -o libass-0.17.1.tar.gz https://github.com/libass/libass/releases/download/0.17.1/libass-0.17.1.tar.gz
          tar xf libass-0.17.1.tar.gz
          cd libass-0.17.1
          ./configure --prefix=$GITHUB_WORKSPACE/build --enable-static --disable-shared
          make -j$(sysctl -n hw.ncpu)
          make install

      # ------------------------
      # FFmpeg
      # ------------------------
      - name: Build FFmpeg
        run: |
          cd $GITHUB_WORKSPACE/build
          git clone https://git.ffmpeg.org/ffmpeg.git
          cd ffmpeg
          PKG_CONFIG_PATH=$GITHUB_WORKSPACE/build/lib/pkgconfig ./configure \
            --prefix=$GITHUB_WORKSPACE/build \
            --pkg-config-flags="--static" \
            --extra-cflags="-I$GITHUB_WORKSPACE/build/include" \
            --extra-ldflags="-L$GITHUB_WORKSPACE/build/lib" \
            --extra-libs="-lpthread -lm" \
            --bindir=$GITHUB_WORKSPACE/output/bin \
            --enable-gpl \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libfreetype \
            --enable-libfontconfig \
            --enable-libass \
            --enable-libfribidi \
            --enable-libenca \
            --enable-libexpat \
            --enable-libiconv \
            --enable-libmp3lame \
            --enable-nonfree \
            --enable-static \
            --disable-shared \
            --enable-ffplay
          make -j$(sysctl -n hw.ncpu)
          make install

      - name: List built binaries
        run: ls -lh $GITHUB_WORKSPACE/output/bin
